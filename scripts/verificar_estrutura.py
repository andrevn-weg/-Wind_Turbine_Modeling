#!/usr/bin/env python3
"""
Script para verificar qual estrutura est√° sendo usada nas p√°ginas web
e sugerir atualiza√ß√µes se necess√°rio.
"""

import sys
from pathlib import Path

# Adicionar src ao path
PROJECT_ROOT = Path(__file__).parent.parent
src_path = PROJECT_ROOT / "src"
sys.path.insert(0, str(src_path))

def verificar_imports_pages():
    """Verifica os imports nas p√°ginas web"""
    
    pages_dir = PROJECT_ROOT / "src" / "web" / "pages"
    print(f"üîç Verificando imports em: {pages_dir}")
    
    for page_file in pages_dir.glob("*.py"):
        print(f"\nüìÑ Arquivo: {page_file.name}")
        
        try:
            content = page_file.read_text(encoding='utf-8')
            
            # Verificar imports problem√°ticos
            if "from models.wind_models.vento_api import VentoAPI" in content:
                print("   ‚ùå Import problem√°tico encontrado: models.wind_models.vento_api")
                print("   üìù Sugest√£o: Implementar VentoAPI no m√≥dulo climate")
            
            # Verificar imports do geographic
            if any(phrase in content for phrase in ["CidadeModel", "PaisModel", "RegiaoModel"]):
                print("   ‚ö†Ô∏è Usando estrutura antiga: *Model classes")
                print("   üìù Sugest√£o: Migrar para nova estrutura separada")
            
            if "from geographic" in content:
                print("   ‚úÖ Usando imports do m√≥dulo geographic")
            elif any(phrase in content for phrase in ["Cidade", "Pais", "Regiao"]) and "geographic" not in content:
                print("   ‚ö†Ô∏è Poss√≠vel uso de entidades sem import adequado")
                
        except Exception as e:
            print(f"   ‚ùå Erro ao ler arquivo: {e}")

def sugerir_correcoes():
    """Sugere corre√ß√µes para os problemas encontrados"""
    
    print("\n" + "="*60)
    print("üìã RELAT√ìRIO DE CORRE√á√ïES NECESS√ÅRIAS")
    print("="*60)
    
    print("\n1. üö® PROBLEMA CR√çTICO: VentoAPI ausente")
    print("   Localiza√ß√£o: src/web/pages/cadastro_localidade.py e listar_localidades.py")
    print("   Solu√ß√£o: Implementar VentoAPI em src/climate/api/vento.py")
    print("   C√≥digo sugerido:")
    print("   ```python")
    print("   from src.climate.api import VentoAPI")
    print("   # ou")
    print("   from climate.api import VentoAPI")
    print("   ```")
    
    print("\n2. ‚úÖ CORRE√á√ÉO IMPLEMENTADA: Separa√ß√£o Entity/Repository")
    print("   Status: Conclu√≠da para m√≥dulo geographic")
    print("   Nova estrutura dispon√≠vel em:")
    print("   - src/geographic/{pais,regiao,cidade}/{entity,repository}.py")
    print("   - Exemplo: examples/exemplo_geographic_refatorado.py")
    
    print("\n3. üîÑ PR√ìXIMAS A√á√ïES RECOMENDADAS:")
    print("   a) Implementar VentoAPI (prioridade ALTA)")
    print("   b) Atualizar imports nas p√°ginas web")
    print("   c) Migrar estrutura dos m√≥dulos climate e turbine")
    print("   d) Criar testes para nova estrutura")
    
    print("\n4. üìù EXEMPLO DE MIGRA√á√ÉO DE IMPORT:")
    print("   Antes:")
    print("   ```python")
    print("   from models.wind_models.vento_api import VentoAPI  # ‚ùå N√£o existe")
    print("   ```")
    print("   Depois:")
    print("   ```python")
    print("   from climate.api import VentoAPI  # ‚úÖ Quando implementado")
    print("   ```")

if __name__ == "__main__":
    print("üîß Verificador de Estrutura - M√≥dulo Geographic")
    print("="*60)
    
    verificar_imports_pages()
    sugerir_correcoes()
    
    print("\n" + "="*60)
    print("‚úÖ Verifica√ß√£o conclu√≠da!")
    print("üìÑ Consulte o relat√≥rio completo em: docs/relatorio_situacao_atual.md")
