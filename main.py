import streamlit as st
import os
import sys
import pandas as pd
from PIL import Image
import importlib

def main():
    # Configura√ß√£o da p√°gina
    st.set_page_config(
        page_title="Simulador de Turbina E√≥lica",
        page_icon="üå¨Ô∏è",
        layout="wide",
        initial_sidebar_state="expanded"
    )
    
    # Aplicar estilo personalizado
    st.markdown("""
    <style>
        .title {
            font-size: 36px !important;
            font-weight: bold;
        }
        .subtitle {
            font-size: 22px !important;
            font-style: italic;
            color: #4F4F4F;
        }
        .header {
            font-size: 24px !important;
            font-weight: bold;
            margin-top: 20px;
        }
        .subheader {
            font-size: 20px !important;
            font-weight: bold;
            margin-top: 10px;
        }
        hr {
            margin-top: 15px;
            margin-bottom: 15px;
        }
    </style>
    """, unsafe_allow_html=True)
    
    # T√≠tulo e subt√≠tulo
    st.markdown('<p class="title">Simulador de Turbina E√≥lica de Velocidade Vari√°vel</p>', unsafe_allow_html=True)
    st.markdown('<p class="subtitle">Modelagem e An√°lise de Componentes de Turbinas E√≥licas</p>', unsafe_allow_html=True)
    
    st.markdown("---")
    
    # Sidebar com menu de navega√ß√£o
    st.sidebar.title("Navega√ß√£o")
    
    opcoes = ["In√≠cio", "Cadastrar Localidade", "Listar Localidades", "Simulador de Turbina"]
    escolha = st.sidebar.radio("Selecione uma op√ß√£o", opcoes)
    
    # P√°ginas baseadas na escolha
    if escolha == "In√≠cio":
        mostrar_pagina_inicial()
    elif escolha == "Cadastrar Localidade":
        abrir_cadastro_localidade()
    elif escolha == "Listar Localidades":
        abrir_listar_localidades()
    elif escolha == "Simulador de Turbina":
        abrir_simulador()
    
def mostrar_pagina_inicial():
    # Se√ß√£o de objetivos
    st.markdown('<p class="header">Objetivos do Projeto</p>', unsafe_allow_html=True)
    
    # Objetivo geral
    st.markdown('<p class="subheader">Objetivo Geral:</p>', unsafe_allow_html=True)
    st.markdown(
        """
        Desenvolver um simulador de turbina e√≥lica de velocidade vari√°vel, al√©m de um sistema de supervis√£o
        que possibilite testar a turbina em diferentes regimes de vento e pontos de opera√ß√£o.
        """
    )
    
    # Objetivos espec√≠ficos
    st.markdown('<p class="subheader">Objetivos Espec√≠ficos:</p>', unsafe_allow_html=True)
    
    objectives = [
        "Revis√£o da literatura sobre sistemas de convers√£o e√≥lica.",
        "Obten√ß√£o do perfil m√©dio de vento em Cachoeira do Sul.",
        "Aquisi√ß√£o da s√©rie temporal do vento, incluindo turbul√™ncia e rajadas de vento.",
        "Desenvolvimento de um sistema de controle para uma turbina e√≥lica de 20 kW, abrangendo desde a velocidade m√≠nima de cut-in, t√©cnica de MPPT, limita√ß√£o de pot√™ncia e cut-off.",
        "Implementa√ß√£o de uma plataforma de simula√ß√£o que permita a modelagem e an√°lise de todos os componentes de uma turbina e√≥lica.",
        "Desenvolvimento de um sistema de supervis√£o utilizando Python.",
        "Avalia√ß√£o do desempenho do sistema de emula√ß√£o em diferentes cen√°rios operacionais."
    ]
    
    for i, obj in enumerate(objectives, 1):
        st.markdown(f"{i}. {obj}")
    
    st.markdown("---")
    
    # Se√ß√£o de contexto
    st.markdown('<p class="header">Contexto e Motiva√ß√£o</p>', unsafe_allow_html=True)
    
    context_text = (
        """
        A crescente necessidade de gera√ß√£o de energia el√©trica, impulsionada pelo aumento da popula√ß√£o e pela 
        expans√£o econ√¥mica, evidencia a urg√™ncia de solu√ß√µes energ√©ticas eficientes e sustent√°veis. A energia 
        e√≥lica emerge como uma op√ß√£o vi√°vel e necess√°ria para atender √† demanda crescente por eletricidade de 
        forma ambientalmente respons√°vel.

        O Brasil tem uma matriz energ√©tica considerada uma das mais limpas do mundo, com cerca de 83% da 
        eletricidade proveniente de fontes renov√°veis. A energia e√≥lica representa aproximadamente 10% da 
        gera√ß√£o el√©trica do pa√≠s, com capacidade instalada superior a 16 gigawatts, e potencial para expans√£o 
        significativa, especialmente nas regi√µes Nordeste e Sul.

        Com investimentos substanciais tanto do setor p√∫blico quanto do privado, o setor de energia e√≥lica no 
        Brasil continua em expans√£o. Neste contexto, torna-se cada vez mais necess√°rio desenvolver estudos para 
        prever e reduzir problemas no controle de turbinas, otimizando a qualidade da energia produzida atrav√©s 
        do aprimoramento das t√©cnicas de opera√ß√£o, controle de velocidade e limita√ß√£o de pot√™ncia.
        """
    )
    
    st.markdown(context_text)

def abrir_cadastro_localidade():
    st.title("Cadastrar Localidade")
    
    try:
        # Tentativa de importar o m√≥dulo de cadastro
        if os.path.exists("pages/cadastro_localidade.py"):
            modulo = importlib.import_module("pages.cadastro_localidade")
            modulo.show_streamlit()
        elif os.path.exists("pagess/wind_pages/cadastro_localidade.py"):
            modulo = importlib.import_module("pagess.wind_pages.cadastro_localidade")
            modulo.show_streamlit()
        else:
            st.error("M√≥dulo de cadastro de localidade n√£o encontrado.")
            st.info("Esta funcionalidade est√° em desenvolvimento.")
            
            # Interface b√°sica para cadastro (placeholder)
            with st.form("cadastro_form"):
                nome = st.text_input("Nome da Localidade")
                latitude = st.number_input("Latitude", format="%.6f")
                longitude = st.number_input("Longitude", format="%.6f")
                notas = st.text_area("Observa√ß√µes")
                
                submitted = st.form_submit_button("Salvar")
                if submitted:
                    st.success("Fun√ß√£o de cadastro em implementa√ß√£o.")
                    
    except Exception as e:
        st.error(f"Erro ao carregar m√≥dulo de cadastro: {e}")

def abrir_listar_localidades():
    st.title("Listar Localidades")
    
    try:
        # Tentativa de importar o m√≥dulo de listagem
        if os.path.exists("pages/listar_localidades.py"):
            modulo = importlib.import_module("pages.listar_localidades")
            modulo.show_streamlit()
        elif os.path.exists("pagess/wind_pages/listar_localidades.py"):
            modulo = importlib.import_module("pagess.wind_pages.listar_localidades")
            modulo.show_streamlit()
        else:
            st.error("M√≥dulo de listagem de localidades n√£o encontrado.")
            st.info("Esta funcionalidade est√° em desenvolvimento.")
            
            # Dados de exemplo para exibi√ß√£o
            dados_exemplo = {
                "Nome": ["Cachoeira do Sul", "S√£o Gabriel", "Santa Maria"],
                "Latitude": [-30.033056, -30.336389, -29.684722],
                "Longitude": [-52.892778, -54.322222, -53.806944],
                "Observa√ß√µes": ["Regi√£o central", "Oeste do estado", "Centro-oeste do estado"]
            }
            
            df = pd.DataFrame(dados_exemplo)
            st.dataframe(df)
            
    except Exception as e:
        st.error(f"Erro ao carregar m√≥dulo de listagem: {e}")

def abrir_simulador():
    st.title("Simulador de Turbina E√≥lica")
    st.info("O m√≥dulo de simula√ß√£o est√° em desenvolvimento.")
    
    # Exemplo de interface para o futuro simulador
    st.subheader("Par√¢metros da Simula√ß√£o")
    
    col1, col2 = st.columns(2)
    
    with col1:
        velocidade = st.slider("Velocidade do Vento (m/s)", 0.0, 25.0, 10.0, 0.1)
        altura = st.slider("Altura da Medi√ß√£o (m)", 10.0, 150.0, 80.0, 5.0)
        turbulencia = st.slider("√çndice de Turbul√™ncia (%)", 0, 30, 10)
    
    with col2:
        potencia = st.slider("Pot√™ncia Nominal da Turbina (kW)", 5, 100, 20)
        diametro = st.slider("Di√¢metro do Rotor (m)", 5, 50, 15)
        angulo_passo = st.slider("√Çngulo de Passo (graus)", 0, 30, 0)
    
    if st.button("Iniciar Simula√ß√£o"):
        st.warning("Funcionalidade ainda n√£o implementada.")
        # Espa√ßo para exibi√ß√£o de gr√°ficos de simula√ß√£o no futuro
        st.markdown("### Resultados da Simula√ß√£o")
        
        # Placeholder para futuros gr√°ficos
        st.line_chart({"Velocidade do Vento": [x*0.1+velocidade-1+x*x*0.01 for x in range(100)],
                      "Pot√™ncia Gerada": [min(potencia, (x*0.1+velocidade-1+x*x*0.01)**3 * 0.2) for x in range(100)]})

if __name__ == "__main__":
    try:
        main()
    except Exception as e:
        st.error(f"Erro ao iniciar aplica√ß√£o: {e}")